on: [push]
jobs:
  docker-pangolin:
    name: Create pangolin image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.3.4
      - uses: rlespinasse/github-slug-action@v3.x
      - name: Prepare
        id: prep
        run: |
          BASE_PATH=ghcr.io/${{ github.repository_owner }}/covid-seq
          TAGS="${BASE_PATH}/${GITHUB_REF_SLUG}/pangolin_nsc:2021-04-28"
          echo ::set-output name=tags::${TAGS}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to GitHub Packages Docker Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Push to GitHub Packages
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Docker/pangolin_2.4.1_Dockerfile
          push: true
          tags: ${{ steps.prep.outputs.tags }}
  docker-nsc_r:
    name: Create nsc_r image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.3.4
      - uses: rlespinasse/github-slug-action@v3.x
      - name: Prepare
        id: prep
        run: |
          BASE_PATH=ghcr.io/${{ github.repository_owner }}/covid-seq
          TAGS="${BASE_PATH}/${GITHUB_REF_SLUG}/nsc_r:1.0"
          echo ::set-output name=tags::${TAGS}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to GitHub Packages Docker Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Push to GitHub Packages
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Docker/nsc_r_Dockerfile
          push: true
          tags: ${{ steps.prep.outputs.tags }}
  docker-nsc_python:
    name: Create nsc_python image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.3.4
      - uses: rlespinasse/github-slug-action@v3.x
      - name: Prepare
        id: prep
        run: |
          BASE_PATH=ghcr.io/${{ github.repository_owner }}/covid-seq
          TAGS="${BASE_PATH}/${GITHUB_REF_SLUG}/nsc_python:1.0"
          echo ::set-output name=tags::${TAGS}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to GitHub Packages Docker Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Push to GitHub Packages
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Docker/nsc_python_Dockerfile
          push: true
          tags: ${{ steps.prep.outputs.tags }}
  docker-ivar:
    name: Create ivar 1.3 image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.3.4
      - uses: rlespinasse/github-slug-action@v3.x
      - name: Prepare
        id: prep
        run: |
          BASE_PATH=ghcr.io/${{ github.repository_owner }}/covid-seq
          TAGS="${BASE_PATH}/${GITHUB_REF_SLUG}/ivar:1.3_nsc"
          echo ::set-output name=tags::${TAGS}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to GitHub Packages Docker Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Push to GitHub Packages
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Docker/ivar_1_3_Dockerfile
          push: true
          tags: ${{ steps.prep.outputs.tags }}
  docker-bcftools:
    name: Create bcftools image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.3.4
      - uses: rlespinasse/github-slug-action@v3.x
      - name: Prepare
        id: prep
        run: |
          BASE_PATH=ghcr.io/${{ github.repository_owner }}/covid-seq
          TAGS="${BASE_PATH}/${GITHUB_REF_SLUG}/bcftools:1.11"
          echo ::set-output name=tags::${TAGS}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to GitHub Packages Docker Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Push to GitHub Packages
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Docker/bcftools_1_11_Dockerfile
          push: true
          tags: ${{ steps.prep.outputs.tags }}